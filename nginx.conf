# Configuración de Nginx para TrueBlock API
# Este archivo debe ir en /etc/nginx/sites-available/trueblock

server {
    listen 80;
    server_name api.trueblock.app;  # Cambia por tu dominio
    
    # Redirección HTTPS obligatoria
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.trueblock.app;  # Cambia por tu dominio
    
    # Certificados SSL (Let's Encrypt o Cloudflare)
    ssl_certificate /path/to/your/certificate.pem;
    ssl_certificate_key /path/to/your/private-key.pem;
    
    # Configuración SSL segura
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Headers de seguridad
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Límites de rate limiting a nivel de Nginx (adicional al de la app)
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=validation:10m rate=10r/h;
    
    # Configuración de proxy hacia la aplicación Node.js
    location / {
        # Rate limiting por zona
        limit_req zone=api burst=20 nodelay;
        
        # Headers importantes para proxy
        proxy_pass http://localhost:3000;  # Puerto donde corre tu app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Headers para identificar IP real del cliente
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffer_size 4k;
        proxy_buffers 50 4k;
        proxy_busy_buffers_size 8k;
        
        # Manejar errores de upstream
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
    }
    
    # Rate limiting específico para endpoints de validación
    location ~ ^/api/(validation|oracle|staking) {
        limit_req zone=validation burst=5 nodelay;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Logs específicos para debugging
        access_log /var/log/nginx/trueblock-validation.log;
        error_log /var/log/nginx/trueblock-validation-error.log;
    }
    
    # Endpoint de health check sin rate limiting estricto
    location /health {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Cache para health checks
        proxy_cache_valid 200 1m;
    }
    
    # Servir archivos estáticos si los hay
    location /static/ {
        alias /path/to/static/files/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Logs
    access_log /var/log/nginx/trueblock-access.log;
    error_log /var/log/nginx/trueblock-error.log;
    
    # Configuración de client
    client_max_body_size 10M;  # Para subir archivos grandes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
}

# Configuración adicional para WebSockets si es necesario
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Upstream con múltiples instancias si usas PM2 o cluster
upstream trueblock_backend {
    least_conn;
    server localhost:3000 max_fails=3 fail_timeout=30s;
    # server localhost:3001 max_fails=3 fail_timeout=30s;  # Si tienes múltiples instancias
    # server localhost:3002 max_fails=3 fail_timeout=30s;
    
    keepalive 32;
}
